name: build-jar

on:
  push:
    branches:
      - dev-sso-ii

jobs:
  bd-mysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: getTasksDone
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

  build-maven-project:
    needs: bd-mysql
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build and Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - run: ./mvnw -B package --file pom.xml
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/getTasksDone
      - uses: actions/upload-artifact@v4
        with:
         name: server-artifact
         path: target/*.jar

  docker-job:
    needs: build-maven-project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: server-artifact
          path: /tmp/server-artifact
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cp Dockerfile /tmp/Dockerfile
          cp -r /tmp/server-artifact/*.jar /tmp/application.jar
          docker build -t my-app-image .
          docker push my-app-image
